<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAMAAAAGAAAACwAAABEAAAAVAAAAGgAAAB0AAAAgAAAAIgAAACIAAAAjAAAAIgAAACEAAAAfAAAAHAAA
        ABgAAAATAAAADgAAAAkAAAAGAAAAAwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAABgAAAA8AAAAbAAAAJwAAADEAAAA5AAAAQAAAAEUAAABIAAAASgAAAEsAAABLAAAASwAA
        AEoAAABHAAAAQwAAAD0AAAA2AAAALQAAACMAAAAZAAAAEAAAAAgAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAFAAAAEwAAACgAAAA9AAAATQAAAFgAAABfAAAAZQIBAWoGBQVuBwcGcAcH
        BnAIBwdxCAcHcAgIB28EBARsAgEBaAAAAGQAAABdAAAAVQAAAEoAAAA9AAAALQAAABwAAAAMAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAMAAAAJQAAAEUCAgJgFBMSdDMwLYpSTUiiZ2FbtXhx
        asOKgnrQj4iA05KLg9SVjofUl5GK1JqUjtOMh4LGgX14u2tpZqxPTUuYJiYlgAsLC3AAAABjAAAAUwAA
        ADoAAAAdAAAACQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAQAAAALx8eHWBzb2utpp+Z2qmi
        m92SjIbNenVwvnNuabl9eHK/eXRuvXhzbbp9eHK9dXBrtnZxbbZ3c262enZxtp6alcqal5TDoZ+dwoOB
        gK9VU1GYKCYleAUEBE8AAAAqAAAADgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAOBwcHK56b
        mKXNycXnX11anB0cG3sNDAx3eXZys765s+mln5jZhH10yVhUUKRUUk+gODY1lTIwLpMwLiuTNDEvlFlV
        UaR0cGywtK+r2rSvqtqhmpPTraWd4F5ZVIIBAQEnAAAADQAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAAIBQUFGYmHhXLKxsLTcW5qmC0rKXMRERBrWFZVkZuYlMSalI7NfnVryWFZULhLRD2qRT42qEU+
        NqhHQDimRD02nVZPSKB6cmqzi4N7uYyCeL+Pg3bTmo6C2F5XUGsBAQEXAAAABwAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAACAgICCQkJCQ0NDRdSUE1FioR+h5iQiKiLgnmrdm9mqGJbU6JWT0ijUElCplJK
        Q61PRz+uWVBGuFlPRblYTkS1SUE4n01EO5RSSD6FT0Y9cFtRR3JQSEBgLiolNAgIBxQKCQgIAwMCAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQkJARQTEgQMDAsKBgYFEhUUEiInJCE9My8rXzw2
        MX9BOzSWPDYwnj02LaVHPC2zSDwstUM5LK83MSqfJiIdhx0aFnASEA5RBwYFMwMCAh0AAAAQBwcGCA8N
        DAQIBwYBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAQEEBAQCAgICCQAA
        ABgAAAAxAAAATAkGAXAvIAa0Vz4P43RWGfx9YB//f2Eg/3xfHv9vUhb2TDYM1CQYBJwCAQBcAAAAQAAA
        ACYAAAARAQEABQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAQAAAAEAAAAAwAA
        AAIAAAAFAAAAEgAAACsBAQBNKhwIqmNIG/d9Yi//iXA9/o92RP6SeUf/k3tI/pJ6R/6Qd0L/inA5/ntg
        Kv5XPxTnFw8DggAAAEEAAAAiAAAADAAAAAMAAAACAAAABAAAAAQAAAADAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAFAAAADQAA
        ABQAAAAWAAAAEgAAAAsAAAAOAAAAIwEBAEg3JQ7JaE4q/nhgPP9/aEf/hXFU/4x7Yv+RgWv/koJt/459
        Zf+Jd1v/hW9O/4FpRP95YDj/Ykki+x8VB5YAAAA5AAAAGgAAAAwAAAAOAAAAFQAAABYAAAARAAAACQAA
        AAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAUAAAASAAAAJgAAADYAAAA6AAAAMAAAACAAAAAfAAAANy4eDLVjSin/c11B/oFyYv6SiYH/opyY/q+p
        pv63s7H/trGv/qymov6fmJP/kYmD/oN3a/54ZlH/b1c4/ltCIfwUDQR3AAAALQAAAB8AAAAoAAAANwAA
        ADoAAAAuAAAAGwAAAAoAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAoAAAAjAwICRiUgG4YwKSOXEg8NZwAAADsAAAAyDgkDZlY9HvxvXkv/hnx0/pqS
        i/6tpqD/vbez/srGwv7V0c//08/M/sfBvf65sqz/qqGa/pmQh/6HfHT/dWhd/mVQN/9ELhTfAQAAQgAA
        ADcEAwNMJiEciC8pI5cPDQthAAAAMQAAABMAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAA4DAwIxXlJHz4R1Zf6IeGj+fG1e+SYhHIAAAABCKhwLrGZW
        Rf6Cd27/mY+G/q2lnf7AubL/0MrF/tzY1f7m4+H/5OHe/tjTzv7Kw73/u7Or/quhmP6ZjoT/hnpv/nJl
        W/9YQyv+DwoDcAQDA09iVkrYhXZm/od4aP96a1z2IR0ZawAAABoAAAAGAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAA0hHRlakIJ1/6GUhv+jlon/mYt9/2FW
        S9EAAABNQTIjz3ZqX/+QhHr/p52T/7qyqv/Mxb7/2dTP/+Pg3P/s6ef/6ufk/97Z1f/Sy8T/xLy0/7as
        o/+lmpD/k4d7/35yZv9nWk7/HxYLlSYhHIaNfnD/oJOF/6OWif+ajX//YVZMvwAAABgAAAAFAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAkUEhA8tq6m+tDK
        w//QysP+v7au/mdcTd8AAABWTkM51n5yZv6ZjYP/r6ab/sG5sP7QycH/2tXQ/uTg3P7s6ef/6ufk/t7Z
        1f7SzMX/xr62/rqxp/6topb/m4+D/od6bf9vY1f+KCIcoCEcEpepn5T+ysO8/tLMxf/LxL7+XlhSoAAA
        ABEBAQEDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEB
        AQQAAAAXV009pc/Gtf/g2s3+uap6/ldECfsCAQBkVUpB3IN2a/6ek4j/tKqg/sO7sv7QycH/2tXQ/uTg
        3P7s6ef/6ufk/t7Z1f7SzMX/xr62/ruxp/6vpJn/oJSH/ox/cv90Z1r+LygjqSQbALmNejr+1cyz/t7Y
        zf+jlHz1DAsJMgMDAgsBAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAIAAAARIxgFcItrEf+yjgf/rIoA/2VPAP8MCACHVUtC3YZ5bf+hlor/tqyi/8S7
        sv/QycH/2tXQ/+Tg3f/s6ef/6ufk/97Z1f/SzMX/xr62/7uyp/+wpZr/opaJ/4+BdP93aV3/LykjrTgq
        ANuMcQD/upUC/6F/Dv9cQw3RAAAAHQEBAQcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAMDwoCQ4JiEv2tiQr+s5AA/nRcAP4ZEgCqVktC34d6
        bv6jl4v/t62i/sO7sv7QycH/2tXQ/uTg3P7s6ef/6ufk/t7Z1f7SzMX/xr62/ruxp/6wpZr/o5eK/pCD
        dv94al7+MSojtUw6APWZewD+uZQE/pt5EP9DMAqmAAAAFwAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAgEAJHFUEOynhQz+uJQB/oJo
        AP4pHwDKVktC4Yd7bv6kmIz/t62i/sO7sv7QycH/2tXQ/uTg3P7q5+T/5+Tg/t7Z1f7SzMX/xr62/rux
        p/6wpZr/pJeL/pGEdv95a17+OC8ky1xIAP6khAD+tpEG/pJxEf8qHgZ6AAAAEgAAAAMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAG1Y/
        DMShfw7/upUC/49zAP89LwDnVUtC4oh7bv+ilov/o5iX/8K6sf/QycH/2tXQ/+Tg3f94qFL/bKZH/9vW
        0f/SzMX/xr62/7uxp/+nmo3/oZSG/5GEdv95bF7/RDgk6GtVAP+ujAD/sY0I/4dnEf8UDgJLAAAADQAA
        AAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAEAAAAFTsqCJiZeBD+uZQE/pt9AP5QPgD6WU1C6oh7bv57cYf/MjCz/pWMpP7QycH/2tXQ/uTg
        3P6vyKj/qMqr/tzX0/7SzMX/xr62/rSqnv6WfUX/lIBb/pGEdv95a17+T0Ej/XlhAP+1kQD+q4gK/npb
        EPYCAQAnAAAACgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAADAAAAEiIYBW6QcBH+tZEG/qaGAP5gTAD/XVBA/Id7bv6bj4r/oJi3/rmw
        rf7QycH/2tXQ/uTg3P7s6ef/6ufk/t7Z1f7SzMX/xr62/rqwpv65q43/ppeA/pGDdv95a17+V0gi/oVr
        AP+5lQH+pYIN/l9GDc8AAAAgAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAEwwIAUeAYBH/e1wS/2JGF/9WPRj/ZFRE/4d6
        bv+jl4v/tqyi/8S7sv/QycH/2tXQ/+Tg3f/s6ef/6ufk/97Z1f/SzMX/xr62/7uyp/+wpZr/o5eK/5CD
        dv94al7/W0gv/1pAGP9uUhT/hmcR/0IwCakAAAAhAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAFQQDAUBZPxv5XkMg/mRJ
        If5oTB//aVlF/oV5bP6hlYn/tauh/sO7sv7QycH/1tDK/tnUz/7c19L/2tXP/tLLxf7MxLz/xb20/rux
        p/6wpZn/oZWJ/o6BdP93aV3+Z1Ez/mZLIP9iRyL+ZEws/i0fC5kAAAAjAAAACQAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAFCgc
        CXyLdlD+jHNC/ohtLv6GaCD/bl1E/oN2av6bj4T/pJeL/p6Qgv6Gd2f/dGRT/mlZSP5kVEP/ZFND/mZV
        Rf5tXU3/empa/o+Acf6cj4D/mo1//ot+cf91Z1v+dV8w/oZpJP+ReET+oY9s/nFfQNsAAAAhAAAACAAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAACAAAADj0vEoO+ror/uqd1/7agXv+vlkb/dmZK/4V2aP+JeWn/a1pK/1JBMf9PPi7/U0M2/1lL
        QP9fUkj/YFRK/15QRv9YST3/UUEy/08+Lv9cSzv/e2pa/4t8bP92aFv/iHI8/7ObUv/Br33/0cWn/6WV
        c+YAAAAYAQAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAABgUBBxkSAjjLvZn428+q/tbHkv7QvHr/kH9j/ot6av5ZSDj/Tj0t/lJC
        NP5dUEX/ZllP/mxfVf5wY1j/cWRa/nBjWf5rX1X/ZVlP/lpMQf5QPzD/Tz4u/nNjUv+Le2v+oI5f/tbF
        jP/j2rn+8e3i/nJlRZ4HBgMMBgQBAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAkDAhgVDQhHPB5e08ej7Ozly/7l2rP/nY13/n1t
        XP5PPi7/Vkc6/mRXTv5uYVf/dmle/nxwZP6Ac2j/gXVp/oBzaP58cGX/dmpf/m5iWP5jVkz/UkIz/lxL
        O/+NfWz+u66N/u7mzf/y7d79l4llrBYSCRgmIhYEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQeEAI5MyQFKiUVEjkv
        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
        ACQfHRxaVlBOqpOOjN21sK7yvrm2+Kunpet9eHbIPzs6iwsKCkIAAAAvAAAAJQAAABcBAQALAwMCAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAADAAAACgAA
        ABUAAAAfAAAAJQAAACcAAAAoAAAAKxwTBnFVPhnZZkwh8045E8k8KAm2RzEOw1Q9E89kShrbaVAh00o7
        IHsTEAoGBQUDAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAACAQACCQYBDCscCXs/MBujTz4jtFVBIb5POha9TDQNrE45DqCKek29gXRYvVpLIYAQCwEYHhQCGiMY
        AyEqHgYYIhkJBzMoEgQuJRMBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAGhEEAiEXCgwrJBglMSshKiIaDB0cFAcKGhMGBysiDwY2LhsGOzQhBTsy
        HQQuJA0CGhICAhwTAQEbEwIBGBABAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8YDQElHxYBJiAWASEbEQEXEQcBAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/+AAAD/8AAP/wAAAH/wAA//AAAAP/
        AAD/4AAAAf8AAP/gAAAB/wAA/+AAAAH/AAD/4AAAAf8AAP/wAAAD/wAA//gAAAf/AAD//AAAD/8AAP/A
        AAAAfwAA/wAAAAA/AAD/AAAAAB8AAP4AAAAAHwAA/gAAAAAfAAD+AAAAAB8AAP4AAAAAHwAA/wAAAAAf
        AAD/AAAAAD8AAP8AAAAAPwAA/4AAAAA/AAD/gAAAAD8AAP+AAAAAPwAA/4AAAAB/AAD/gAAAAH8AAP+A
        AAAAPwAA/4AAAAA/AAD/gAAAAH8AAP/AAAAAfwAA/8AAAAD/AAD/4AAAAf8AAP/4AAAD/wAA//gAAAf/
        AAD/+AAAA/8AAP/4AAAD/wAA//gAAAP/AAD/+AAAA/8AAP/8AAAH/wAA//wAAAf/AAD//gAAD/8AAP/+
        AAAf/wAA//8AAB//AAD//wAAH/8AAP/+AAAf/wAA//4AAB//AAD//gAAP/8AAP//AAD//wAA//+D////
        AAA=
</value>
  </data>
</root>